<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.erp.mappers.TblGoodsMapper" >
  <resultMap id="BaseResultMap" type="cn.erp.pojo.TblGoods" >
    <id column="uuid" property="uuid" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="origin" property="origin" jdbcType="VARCHAR" />
    <result column="producer" property="producer" jdbcType="VARCHAR" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="inPrice" property="inprice" jdbcType="DOUBLE" />
    <result column="outPrice" property="outprice" jdbcType="DOUBLE" />
    <result column="goodsTypeUuid" property="goodstypeuuid" jdbcType="BIGINT" />
    <result column="useNum" property="usenum" jdbcType="INTEGER" />
    <result column="minNum" property="minnum" jdbcType="INTEGER" />
    <result column="maxNum" property="maxnum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    uuid, name, origin, producer, unit, inPrice, outPrice, goodsTypeUuid, useNum, minNum, 
    maxNum
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.erp.pojo.TblGoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tbl_goods
    where uuid = #{uuid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tbl_goods
    where uuid = #{uuid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.erp.pojo.TblGoodsExample" >
    delete from tbl_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.erp.pojo.TblGoods" >
    insert into tbl_goods (uuid, name, origin, 
      producer, unit, inPrice, 
      outPrice, goodsTypeUuid, useNum, 
      minNum, maxNum)
    values (#{uuid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{origin,jdbcType=VARCHAR}, 
      #{producer,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{inprice,jdbcType=DOUBLE}, 
      #{outprice,jdbcType=DOUBLE}, #{goodstypeuuid,jdbcType=BIGINT}, #{usenum,jdbcType=INTEGER}, 
      #{minnum,jdbcType=INTEGER}, #{maxnum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.erp.pojo.TblGoods" >
    insert into tbl_goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="origin != null" >
        origin,
      </if>
      <if test="producer != null" >
        producer,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="inprice != null" >
        inPrice,
      </if>
      <if test="outprice != null" >
        outPrice,
      </if>
      <if test="goodstypeuuid != null" >
        goodsTypeUuid,
      </if>
      <if test="usenum != null" >
        useNum,
      </if>
      <if test="minnum != null" >
        minNum,
      </if>
      <if test="maxnum != null" >
        maxNum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        #{uuid,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="origin != null" >
        #{origin,jdbcType=VARCHAR},
      </if>
      <if test="producer != null" >
        #{producer,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="inprice != null" >
        #{inprice,jdbcType=DOUBLE},
      </if>
      <if test="outprice != null" >
        #{outprice,jdbcType=DOUBLE},
      </if>
      <if test="goodstypeuuid != null" >
        #{goodstypeuuid,jdbcType=BIGINT},
      </if>
      <if test="usenum != null" >
        #{usenum,jdbcType=INTEGER},
      </if>
      <if test="minnum != null" >
        #{minnum,jdbcType=INTEGER},
      </if>
      <if test="maxnum != null" >
        #{maxnum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.erp.pojo.TblGoodsExample" resultType="java.lang.Integer" >
    select count(*) from tbl_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tbl_goods
    <set >
      <if test="record.uuid != null" >
        uuid = #{record.uuid,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.origin != null" >
        origin = #{record.origin,jdbcType=VARCHAR},
      </if>
      <if test="record.producer != null" >
        producer = #{record.producer,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null" >
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.inprice != null" >
        inPrice = #{record.inprice,jdbcType=DOUBLE},
      </if>
      <if test="record.outprice != null" >
        outPrice = #{record.outprice,jdbcType=DOUBLE},
      </if>
      <if test="record.goodstypeuuid != null" >
        goodsTypeUuid = #{record.goodstypeuuid,jdbcType=BIGINT},
      </if>
      <if test="record.usenum != null" >
        useNum = #{record.usenum,jdbcType=INTEGER},
      </if>
      <if test="record.minnum != null" >
        minNum = #{record.minnum,jdbcType=INTEGER},
      </if>
      <if test="record.maxnum != null" >
        maxNum = #{record.maxnum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tbl_goods
    set uuid = #{record.uuid,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      origin = #{record.origin,jdbcType=VARCHAR},
      producer = #{record.producer,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      inPrice = #{record.inprice,jdbcType=DOUBLE},
      outPrice = #{record.outprice,jdbcType=DOUBLE},
      goodsTypeUuid = #{record.goodstypeuuid,jdbcType=BIGINT},
      useNum = #{record.usenum,jdbcType=INTEGER},
      minNum = #{record.minnum,jdbcType=INTEGER},
      maxNum = #{record.maxnum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.erp.pojo.TblGoods" >
    update tbl_goods
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="origin != null" >
        origin = #{origin,jdbcType=VARCHAR},
      </if>
      <if test="producer != null" >
        producer = #{producer,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="inprice != null" >
        inPrice = #{inprice,jdbcType=DOUBLE},
      </if>
      <if test="outprice != null" >
        outPrice = #{outprice,jdbcType=DOUBLE},
      </if>
      <if test="goodstypeuuid != null" >
        goodsTypeUuid = #{goodstypeuuid,jdbcType=BIGINT},
      </if>
      <if test="usenum != null" >
        useNum = #{usenum,jdbcType=INTEGER},
      </if>
      <if test="minnum != null" >
        minNum = #{minnum,jdbcType=INTEGER},
      </if>
      <if test="maxnum != null" >
        maxNum = #{maxnum,jdbcType=INTEGER},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.erp.pojo.TblGoods" >
    update tbl_goods
    set name = #{name,jdbcType=VARCHAR},
      origin = #{origin,jdbcType=VARCHAR},
      producer = #{producer,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      inPrice = #{inprice,jdbcType=DOUBLE},
      outPrice = #{outprice,jdbcType=DOUBLE},
      goodsTypeUuid = #{goodstypeuuid,jdbcType=BIGINT},
      useNum = #{usenum,jdbcType=INTEGER},
      minNum = #{minnum,jdbcType=INTEGER},
      maxNum = #{maxnum,jdbcType=INTEGER}
    where uuid = #{uuid,jdbcType=BIGINT}
  </update>
  
  <!-- 动态查询展示商品 -->
  <select id="selGoods" resultType="cn.erp.dto.GoodsDto" >
  SELECT
	tg.*,
ts.name as gysname,
ts.address as gysaddress
FROM
	tbl_goods tg
LEFT JOIN tbl_goodstype tgt ON tg.goodsTypeUuid = tgt.uuid
LEFT JOIN tbl_supplier ts ON tgt.supplierUuid=ts.uuid
where 1=1
<if test="gysId != null and gysId!=-1">
	and ts.uuid =#{gysId}
</if>
<if test="name != null and name !=''">  
        and  tg.name = #{name}  
</if>  
<if test="producer != null and producer !=''">  
        and  tg.producer = #{producer}  
</if> 
<if test="unit != null and unit !=''">  
        and  tg.unit = #{unit}  
</if> 
	limit #{beginNo},#{pageSize}
  </select>
  
  
  <!-- 根据商品id查找对应商品 -->
  <select id="selGooodsById" resultType="cn.erp.dto.GoodsDto" parameterType="java.lang.Long">
  SELECT
	tg.*, tgy.`name` AS goodstypename,
 ts.`name` as gysname
FROM
	tbl_goods tg
INNER JOIN tbl_goodstype tgy ON tg.goodsTypeUuid = tgy.uuid
LEFT JOIN tbl_supplier ts ON ts.uuid=tgy.supplierUuid
WHERE tg.uuid=#{uuid}  
  
  </select>
  
  <!-- 根据商品种类id查找对应商品 -->
<select id="selGooodsByTypeId" resultType="cn.erp.dto.GoodsDto" parameterType="java.lang.Long">
SELECT
tg.*, tgy.`name` AS goodstypename,
ts.`name` as gysname
FROM
tbl_goods tg
INNER JOIN tbl_goodstype tgy ON tg.goodsTypeUuid = tgy.uuid
LEFT JOIN tbl_supplier ts ON ts.uuid=tgy.supplierUuid
WHERE tg.goodsTypeUuid=#{uuid}  
  
  </select>
  
  
  <!-- 商品运输运输任务指派列表 -->
  <select id="selRenwuZhipaiLiebiao" resultType="cn.erp.dto.GoodsTransportDto">
 SELECT  B.*,e.name as gdrname FROM 
 (		
SELECT
	A.*, emp. NAME AS checkname
FROM
	(
		SELECT
			tep. NAME AS zdrname,
			tor.checker,
			tor.checkTime,
			tor.createTime,
			tsr. NAME AS gysname,
			tsr.needs,
			tor.completer,
			tor.uuid as orderuuid
		FROM
			tbl_order tor
		INNER JOIN tbl_supplier tsr ON tor.supplierUuid = tsr.uuid
		INNER JOIN tbl_emp tep ON tep.uuid = tor.creater
	) AS A
INNER JOIN tbl_emp emp ON emp.uuid = A.checker
 ) as B
LEFT  JOIN tbl_emp e ON e.uuid = B.completer
  
  </select>
  
  <!--报表，根据订单时间，供应商uuid查询  -->
  <select id="selExcelGoodsByTimeAndGys" resultType="cn.erp.dto.ExcelGoodsByTimeAndGys">
  SELECT
	B.*
FROM
	(
		SELECT
			A.*, tgs.supplierUuid
		FROM
			(
				SELECT
					tg. NAME AS goodsname,
					tg.uuid AS goodsuuid,
					tg.goodsTypeUuid AS goodstypeuuid
				FROM
					tbl_goods tg
				WHERE
					uuid IN (
						SELECT
							goodsUuid
						FROM
							tbl_orderdetail
						WHERE
							orderUuid IN (
								SELECT
									uuid
								FROM
									tbl_order tor
								WHERE
									tor.createTime BETWEEN #{starttime}
								AND #{endtime}
							)
					)
			) AS A
		INNER JOIN tbl_goodstype tgs ON A.goodstypeuuid = tgs.uuid
	) AS B
INNER JOIN tbl_supplier tsr ON B.supplierUuid = tsr.uuid
WHERE
	tsr.uuid = #{gysuuid}
  
  </select>
  <!-- 报表，根据商品id查询订单num，订单时间 -->
  <select id="excelDetails" resultType="cn.erp.dto.ExcelOrderNumById" parameterType="java.lang.Long">
  SELECT
	orderNum,
	createTime
FROM
	tbl_order
WHERE
	uuid IN (
		SELECT
			tol.orderUuid
		FROM
			tbl_goods tg
		INNER JOIN tbl_orderdetail tol ON tg.uuid = tol.goodsUuid
		WHERE
			tg.uuid = #{goodsuuid}
	)
  
  </select>
  
  <!--任务指派,根据订单id查询商品类别,商品名称  -->
  <select id="selGoodsTymeNameAndGoodsName" parameterType="java.lang.Long" resultType="cn.erp.dto.GoodsTymeNameAndGoodsName">
  SELECT
	tgt. NAME AS goodstypename,
	B. NAME AS goodsname
FROM
	(
		SELECT
			goodsTypeUuid,
			NAME
		FROM
			(
				SELECT
					tol.goodsUuid
				FROM
					tbl_orderdetail tol
				INNER JOIN tbl_order tor ON tol.orderUuid = tor.uuid
				WHERE
					tor.uuid =#{orderuuid}
			) AS A
		INNER JOIN tbl_goods tgs ON A.goodsUuid = tgs.uuid
	) AS B
INNER JOIN tbl_goodstype tgt ON tgt.uuid = B.goodsTypeUuid
  
  </select>
  
  <!-- 根据供应商和发货方式，查询出供应商 等信息。。-->
  <select id="selSupplierByNeeds"  resultType="cn.erp.dto.SupplierByNeedsDto">
  SELECT
	ts.*,tor.uuid as orderuuid
FROM
	tbl_supplier ts
INNER JOIN tbl_order tor ON ts.uuid = tor.supplierUuid
WHERE
	1 = 1

<if test="uuid != null">
and 	ts.uuid =#{uuid}
</if>
<if test="needs != null">
AND ts.needs = #{needs}
</if>
  </select>
  
  <!-- 任务详情,根据订单uuid，查询出企业名称等。。 -->
  <select id="selInfoByOrderuuid" resultType="cn.erp.dto.InfoByOrderuuid" parameterType="java.lang.Long">
  SELECT
	tsr. NAME AS gysname,
	tsr.needs,
	tor.orderNum,
	tsr.contact,
	tsr.tele,
	tsr.address
FROM
	tbl_order tor
INNER JOIN tbl_supplier tsr ON tor.supplierUuid = tsr.uuid
where tor.uuid=#{orderuuid}
  </select>
  
  <!-- 任务详情单据明细,根据订单uuid，查询出商品类别，商品  已存在！-->
  <!-- <select id="selGoodsAndGoodsTypeName" parameterMap="" resultType="">
  SELECT
	A.*, tgt. NAME AS goodstypename
FROM
	(
		SELECT
			goodsTypeUuid,
			NAME AS goodsname
		FROM
			tbl_goods
		WHERE
			uuid IN (
				SELECT
					tol.goodsUuid
				FROM
					tbl_order tor
				INNER JOIN tbl_orderdetail tol ON tor.uuid = tol.orderUuid
				WHERE
					tor.uuid = #{orderuuid}
			)
	) AS A
INNER JOIN tbl_goodstype tgt ON tgt.uuid = A.goodsTypeUuid
  
  </select> -->
  
  
  
</mapper>